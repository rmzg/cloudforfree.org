<!-- VERSION 0.030_000 -->
[%- meta.wrapper = 'site-wrapper.tt';
    meta.title   = editor.title;
%]

<!-- user must be logged in -->
[%- IF NOT c.user_exists %]
    [% INCLUDE 'user/login.tt' %]
[%- ELSE %]

    </body>
    <head>
        <!-- ACE Editor & W2UI: load JQuery -->
        <!-- <script type='text/javascript' src='http://ajax.googleapis.com/ajax/libs/jquery/2.1.0/jquery.min.js'></script> -->
        <script type='text/javascript' src='/static/js/jquery_2_1_0.min.js'></script>

        <!-- W2UI: load JQuery & W2UI -->
        <!-- <script type='text/javascript' src='http://rawgit.com/vitmalina/w2ui/master/dist/w2ui.min.js'></script> -->
        <script type='text/javascript' src='/static/js/w2ui_1_5.min.js'></script>
        <!-- <link rel='stylesheet' type='text/css' href='http://rawgit.com/vitmalina/w2ui/master/dist/w2ui.min.css' /> -->
        <link rel='stylesheet' type='text/css' href='/static/css/w2ui_1_5.min.css' />

        <!-- AJAX & Apache2::FileManager: header JavaScript code -->
        [%- editor_file_manager.output_js %]

        <script>
//            alert('TMP DEBUG: have static TT value editor_file_manager.curr_file = ' + "'" + '[%- editor_file_manager.curr_file %]' + "'");

            // AJAX & Apache2::FileManager: overwrite filemanager div
            function js_editor_file_manager_div_update() {
                var input1 = arguments[0].trim();
                if (input1) {
                    window.document.getElementById('editor_file_manager_div').innerHTML = input1;
//                    alert('TMP DEBUG: update editor_file_manager_div.innerHTML');
                }
                else {
                    alert('ERROR ECOFMDI00, FILE MANAGER DISPLAY: No File Manager HTML received from server.');
                }
            }

            // AJAX & Apache2::FileManager & ACE Editor: load file content into editor from input AKA open AKA read
            function js_editor_file_content_update() {
//                var input_file_lines = arguments[0].trim();  // ORIGINAL: contains input_file_lines only, not curr_file
                var curr_file = arguments[0].trim().split('\n', 1)[0];  // limit parameter 1 on split() operator only splits first line then returns, faster speed
                var input_file_lines = arguments[0].trim().substring(arguments[0].trim().indexOf("\n") + 1);  // use indexOf instead of split() for remaining lines, faster speed

                if (input_file_lines) {
                    // DEV NOTE, CORRELATION #cff03: stashed Perl values like $c->stash->{editor_file_manager}->{curr_file} 
                    // are accessed in HTML as static TT values like [%- editor_file_manager.curr_file %] but the HTML must be re-loaded each time to refresh new values;
                    // use CGI::Ajax functions for dynamic JS values without re-loading the HTML page

                    // BAD: static value
//                    alert('TMP DEBUG: update editor.setValue(), have editor_file_manager.curr_file = ' + "'" + '[%- editor_file_manager.curr_file %]' + "'");
//                    alert('TMP DEBUG: update editor.setValue(), have curr_file = ' + "'" + curr_file + "'");  // GOOD

                    // W2UI BUG: confusion between tab "caption" vs "text", must set both    https://github.com/vitmalina/w2ui/issues/8
//                    alert('TMP DEBUG: about to change tab caption');
                    w2ui['tabs_w2ui'].set('tab1_div', { caption: curr_file, text: curr_file });  // GOOD!
//                    alert('TMP DEBUG: about to refresh tabs');
                    w2ui['tabs_w2ui'].refresh();
//                    console.log(w2ui['tabs_w2ui']);  // TMP DEBUG

                    // TMP DEBUG: works
//                    alert('TMP DEBUG: about to hide tab');
//                    $('#tab1_div').hide();
//                    alert('TMP DEBUG: about to show tab');
//                    $('#tab1_div').show();

                    // f.FILEMANAGER_curr_file.value does not contain any data, set now
                    var f=window.document.forms.namedItem('FileManager');
                    f.FILEMANAGER_curr_file.value = curr_file;
//                    alert('TMP DEBUG: update editor.setValue(), have f.FILEMANAGER_curr_file.value = ' + "'" + f.FILEMANAGER_curr_file.value + "'");
//                    console.log(f);  // dump contents of object to JS console in browser dev tools

                    editor.setValue(input_file_lines);
                    editor.session.selection.clearSelection();
                }
                else {
                    alert('ERROR ECOFMOP00, FILE MANAGER OPEN: No input file contents received from server.');
                }
            }

            // AJAX & Apache2::FileManager & ACE Editor: report on file success of output AKA save AKA write
            function js_editor_file_save_report() {
                var input1 = arguments[0].trim();
                if (input1) {
                    alert(input1);
                }
                else {
                    alert('ERROR ECOFMSA00, FILE MANAGER SAVE: No output file status report received from server.');
                }
            }

            // software-induced full screen mode, exits via esc instead of f11, thus can't be used in vi keybinding mode 
            function full_screen() {
                if ( document.querySelector('input[name="ace_keybindings"]:checked').id == 'ace_keybindings_vim' ) {
                    alert('Please Press Physical F11 Key While In Vim Keybinding Mode');
                    return;
                }
                var head_element = window.document.head;
                var full_screen_method =
                    head_element.requestFullScreen ||
                    head_element.webkitRequestFullScreen ||
                    head_element.mozRequestFullScreen ||
                    head_element.msRequestFullScreen;
                // modern browsers
                if (full_screen_method) {
                    full_screen_method.call(head_element);
                } 
                // old Internet Explorer
                else if (typeof window.ActiveXObject !== 'undefined') {
                    var wscript_shell = new ActiveXObject('WScript.Shell');
                    if (wscript_shell !== null) {
                        wscript_shell.SendKeys('{F11}');
                    }
                }
            }

/*
            // placeholder for code in case we need to read z-index
            function display_menu_zindex() {
                // display value of z-index
                var menu_div = window.document.getElementById('menu');
                //alert('have menu_div = ' + menu_div);
                var menu_style = document.defaultView.getComputedStyle(menu_div, null);
                //var menu_style = document.defaultView.getComputedStyle(menu, null);  // DEV NOTE: also works calling 'menu' directly instead of 'menu_div'???
                //alert('have menu_style = ' + menu_style);
                var menu_zindex = menu_style.getPropertyValue('z-index');
                alert('have menu_zindex = ' + menu_zindex);
                alert('have menu_zindex full = ' + document.defaultView.getComputedStyle(window.document.getElementById('menu'), null).getPropertyValue('z-index'));
            }
*/

            // W2UI: resize layout div on window resize
            function body_resized() {
                var shiny_header_footer_height = 200;
                var window_inner_height = window.innerHeight;
                //alert('in layout setup, have window_inner_height = ' + window_inner_height);
                if (window.document.getElementById('layout_div').style.height != '100%') {
                    window.document.getElementById('layout_div').style.height = (window_inner_height - shiny_header_footer_height) + 'px';
                }
                var layout_top_height = w2ui['layout'].get('top').size;
                var tabs_div_height = parseInt(window.document.getElementById('tabs_div').style.height, 10);
                var editor_height = window_inner_height - (shiny_header_footer_height + layout_top_height + tabs_div_height + 2);
                //alert('have editor_height = ' + editor_height);
                window.document.getElementById('tabs_parent_div').style.height = '100%';
                //window.document.getElementById('tabs_parent_div').style.height = editor_height + 'px';
                //window.document.getElementById('tab1_div').style.height = editor_height + 'px';
                //window.document.getElementById('tab1_div').style.height = '100%';
                window.document.getElementById('tab1_div').style.height = 'calc(100% - ' + window.document.getElementById('tabs_div').style.height + ')';


                // START HERE: get ace_content div to resize correctly, read from file manager, write to file manager
                // START HERE: get ace_content div to resize correctly, read from file manager, write to file manager
                // START HERE: get ace_content div to resize correctly, read from file manager, write to file manager

                window.document.getElementById('ace_content').style.height = '100%';

                //$('#editor').css('height', editor_height + 'px');
                editor.resize();
            }

            // W2UI: switch between normal & full window layout
            function w2ui_layout_size_toggle() {
                if (window.document.getElementById('layout_div').style.height == '100%') { w2ui_layout_normal(); }
                else { w2ui_layout_fullwindow(); }
            }

            // W2UI: full window layout div 
            function w2ui_layout_fullwindow() {
                // do not re-run this if already in full window layout
                if (window.document.getElementById('layout_div').style.height == '100%') { return; }

                var container_var = window.document.getElementById('container');
                if (container_var.style.position && (! container_var.style.position_saved)) { container_var.style.position_saved = container_var.style.position; }
                if (container_var.style.top && (! container_var.style.top_saved)) { container_var.style.top_saved = container_var.style.top; }
                if (container_var.style.bottom && (! container_var.style.bottom_saved)) { container_var.style.bottom_saved = container_var.style.bottom; }
                if (container_var.style.left && (! container_var.style.left_saved)) { container_var.style.left_saved = container_var.style.left; }
                if (container_var.style.right && (! container_var.style.right_saved)) { container_var.style.right_saved = container_var.style.right; }
                if (container_var.style.height && (! container_var.style.height_saved)) { container_var.style.height_saved = container_var.style.height; }
                if (container_var.style.width && (! container_var.style.width_saved)) { container_var.style.width_saved = container_var.style.width; }
                container_var.style.position = 'absolute';
                container_var.style.top = '0px';
                container_var.style.bottom = '0px';
                container_var.style.left = '0px';
                container_var.style.right = '0px';
                container_var.style.height = '100%';
                container_var.style.width = '100%';

                var content_var = window.document.getElementById('content');
                if (content_var.style.position && (! content_var.style.position_saved)) { content_var.style.position_saved = content_var.style.position; }
                if (content_var.style.top && (! content_var.style.top_saved)) { content_var.style.top_saved = content_var.style.top; }
                if (content_var.style.bottom && (! content_var.style.bottom_saved)) { content_var.style.bottom_saved = content_var.style.bottom; }
                if (content_var.style.left && (! content_var.style.left_saved)) { content_var.style.left_saved = content_var.style.left; }
                if (content_var.style.right && (! content_var.style.right_saved)) { content_var.style.right_saved = content_var.style.right; }
                if (content_var.style.height && (! content_var.style.height_saved)) { content_var.style.height_saved = content_var.style.height; }
                if (content_var.style.width && (! content_var.style.width_saved)) { content_var.style.width_saved = content_var.style.width; }
                content_var.style.position = 'absolute';
                content_var.style.top = '0px';
                content_var.style.bottom = '0px';
                content_var.style.left = '0px';
                content_var.style.right = '0px';
                content_var.style.height = '100%';
                content_var.style.width = '100%';

                var layout_var = window.document.getElementById('layout_div');
                if (layout_var.style.position && (! layout_var.style.position_saved)) { layout_var.style.position_saved = layout_var.style.position; }
                if (layout_var.style.top && (! layout_var.style.top_saved)) { layout_var.style.top_saved = layout_var.style.top; }
                if (layout_var.style.bottom && (! layout_var.style.bottom_saved)) { layout_var.style.bottom_saved = layout_var.style.bottom; }
                if (layout_var.style.left && (! layout_var.style.left_saved)) { layout_var.style.left_saved = layout_var.style.left; }
                if (layout_var.style.right && (! layout_var.style.right_saved)) { layout_var.style.right_saved = layout_var.style.right; }
                if (layout_var.style.height && (! layout_var.style.height_saved)) { layout_var.style.height_saved = layout_var.style.height; }
                if (layout_var.style.width && (! layout_var.style.width_saved)) { layout_var.style.width_saved = layout_var.style.width; }
                layout_var.style.position = 'absolute';
                layout_var.style.top = '0px';
                layout_var.style.bottom = '0px';
                layout_var.style.left = '0px';
                layout_var.style.right = '0px';
                layout_var.style.height = '100%';
                layout_var.style.width = '100%';
 
                // arrange in front of menu
                window.document.getElementById('layout_div').style.zIndex = '200000';

                // force redraw all divs
                $(window).resize();
            }

            // W2UI: normal size layout div 
            function w2ui_layout_normal() {
                if (window.document.getElementById('layout_div').style.height != '100%') { return; }

                var window_inner_height = window.innerHeight;
                //alert('in w2ui_layout_normal(), have window_inner_height = ' + window_inner_height);

                var container_var = window.document.getElementById('container');
                if (container_var.style.position_saved) { container_var.style.position = container_var.style.position_saved; container_var.style.position_saved = null; } 
                else { container_var.style.position = null; }
                if (container_var.style.top_saved) { container_var.style.top = container_var.style.top_saved; container_var.style.top_saved = null; }
                else { container_var.style.top = null; }
                if (container_var.style.bottom_saved) { container_var.style.bottom = container_var.style.bottom_saved; container_var.style.bottom_saved = null; }
                else { container_var.style.bottom = null; }
                if (container_var.style.left_saved) { container_var.style.left = container_var.style.left_saved; container_var.style.left_saved = null; }
                else { container_var.style.left = null; }
                if (container_var.style.right_saved) { container_var.style.right = container_var.style.right_saved; container_var.style.right_saved = null; }
                else { container_var.style.right = null; }
                if (container_var.style.height_saved) { container_var.style.height = container_var.style.height_saved; container_var.style.height_saved = null; }
                else { container_var.style.height = null; }
                if (container_var.style.width_saved) { container_var.style.width = container_var.style.width_saved; container_var.style.width_saved = null; }
                else { container_var.style.width = null; }

                var content_var = window.document.getElementById('content');
                if (content_var.style.position_saved) { content_var.style.position = content_var.style.position_saved; content_var.style.position_saved = null; } 
                else { content_var.style.position = null; }
                if (content_var.style.top_saved) { content_var.style.top = content_var.style.top_saved; content_var.style.top_saved = null; }
                else { content_var.style.top = null; }
                if (content_var.style.bottom_saved) { content_var.style.bottom = content_var.style.bottom_saved; content_var.style.bottom_saved = null; }
                else { content_var.style.bottom = null; }
                if (content_var.style.left_saved) { content_var.style.left = content_var.style.left_saved; content_var.style.left_saved = null; }
                else { content_var.style.left = null; }
                if (content_var.style.right_saved) { content_var.style.right = content_var.style.right_saved; content_var.style.right_saved = null; }
                else { content_var.style.right = null; }
                if (content_var.style.height_saved) { content_var.style.height = content_var.style.height_saved; content_var.style.height_saved = null; }
                else { content_var.style.height = null; }
                if (content_var.style.width_saved) { content_var.style.width = content_var.style.width_saved; content_var.style.width_saved = null; }
                else { content_var.style.width = null; }

                var layout_var = window.document.getElementById('layout_div');
                if (layout_var.style.position_saved) { layout_var.style.position = layout_var.style.position_saved; layout_var.style.position_saved = null; } 
                else { layout_var.style.position = null; }
                if (layout_var.style.top_saved) { layout_var.style.top = layout_var.style.top_saved; layout_var.style.top_saved = null; }
                else { layout_var.style.top = null; }
                if (layout_var.style.bottom_saved) { layout_var.style.bottom = layout_var.style.bottom_saved; layout_var.style.bottom_saved = null; }
                else { layout_var.style.bottom = null; }
                if (layout_var.style.left_saved) { layout_var.style.left = layout_var.style.left_saved; layout_var.style.left_saved = null; }
                else { layout_var.style.left = null; }
                if (layout_var.style.right_saved) { layout_var.style.right = layout_var.style.right_saved; layout_var.style.right_saved = null; }
                else { layout_var.style.right = null; }
                if (layout_var.style.height_saved) { layout_var.style.height = layout_var.style.height_saved; layout_var.style.height_saved = null; }
                else { layout_var.style.height = (window_inner_height - 200) + 'px'; }
                if (layout_var.style.width_saved) { layout_var.style.width = layout_var.style.width_saved; layout_var.style.width_saved = null; }
                else { layout_var.style.width = '100%'; }

                // arrange behind menu
                layout_var.style.zIndex = '100';

                // force redraw all divs
                $(window).resize();
            }
        </script>

        <!-- ACE Editor: load with settings_menu extension -->
        <script type='text/javascript' src='/static/ace_editor/src-min-noconflict/ace.js' charset='utf-8'></script>
        <script type='text/javascript' src='/static/ace_editor/src-min-noconflict/ext-settings_menu.js' charset='utf-8'></script>

        <!-- ACE Editor: CSS styles -->
        <style type='text/css' media='screen'>
            #editor { 
                margin: 0px;
                width: 100%;
                height: 100%;
                <!-- width: auto;
                height: auto; -->
                border-style: solid;
                border-width: 3px;
                border-color: rgb(235,235,235);  <!-- grey to match the gutter -->
            }
            editor_ace_textarea_var {
                display: block;  <!-- if set to 'none', will not allow keyboard input -->
                margin: 0px;
                width: 1px;
                height: 1px;
                border-style: none;
            }
        </style>

        <!-- Keyboard Shortcuts: load -->
        <script type='text/javascript' src='/static/js/shortcut.js' charset='utf-8'></script>
    </head>

    <!-- W2UI: resize layout div on window resize -->
    <body onresize='body_resized()'>

    <!-- Apache2::FileManager: create tmp div, load initial code outside of <script> section due to complex characters -->
    <div id='editor_file_manager_tmp_div' style='display: none;'>[%- editor_file_manager.output %]</div>

    <!-- W2UI: create div -->
    <div id='layout_div' style='width: 100%; min-height: 300px; background-color: white;'></div>

    <script type='text/javascript'>
        // W2UI: create layout
        $(function () { 
            // ONLY RUN ONCE
            //if (typeof script_ran != 'undefined') { return; } else { script_ran = 1; }
            //alert('starting script');

            var pstyle = 'border: 1px solid #dfdfdf; padding: 5px;';
            $('#layout_div').w2layout({
                name: 'layout',
                panels: [
                    { type: 'top', size: 40, resizable: true, style: pstyle, content: "\
                        <!-- ACE Editor & Apache2::FileManager & Syntax Check: create div for page header -->\
                        <div id='editor_header_div'>\
                            <b><u>IDE Code Editor</u></b>\
                            &nbsp;&nbsp;\
                            Keybindings:\
                            <label><input type='radio' name='ace_keybindings'\
                                onclick='editor.setKeyboardHandler(\"ace/keyboard/vim\");' checked='checked'/>Vim</label>\
                            <label><input type='radio' name='ace_keybindings' onclick='editor.setKeyboardHandler(\"ace/keyboard/emacs\");'/>Emacs</label>\
                            <label><input type='radio' name='ace_keybindings' onclick='editor.setKeyboardHandler(\"\");'/>Normal</label>\
                            &nbsp;&nbsp;\
                            <!-- must pass empty arguments ({}, {}, {}) to saveFile() errors: Cannot read property 'argString' of undefined -->\
                            <button class='w2ui-btn' onclick='editor.commands.byName.saveFile.exec({}, {}, {});'>Save (CTRL-S)</button>\
                            <!-- RPerl Syntax Check button & soon-to-be-hidden textarea -->\
                            <form name='syntax_check' action='syntax_check' method='post' target='_blank' style='display: inline;'>\
                                <button class='w2ui-btn' id='syntax_check_submit' onclick='window.document.forms.namedItem(\"syntax_check\").submit();'>\
                                    Syntax Check (F6)</button>\
                                <!-- purposefully empty textarea, to avoid any visible pixels before editor_ace_textarea_var.hide() occurs -->\
                                <textarea name='editor_ace_textarea'></textarea>\
                            </form>\
                            <button class='w2ui-btn' onclick='editor.showSettingsMenu();'>Editor Menu (F7)</button>\
                            <button class='w2ui-btn' onclick='w2ui[\"layout\"].toggle(\"left\", 0);'>File Manager (F8)</button>\
                            <button class='w2ui-btn' onclick='w2ui[\"layout\"].toggle(\"top\", 0);'>This Toolbar (F9)</button>\
                            <button class='w2ui-btn' onclick='w2ui_layout_size_toggle();'>Full Window (F10)</button>\
                            <button class='w2ui-btn' onclick='full_screen();'>Full Screen (F11)</button>\
                        </div>\
                    "},
                    { type: 'left', size: 210, resizable: true, style: pstyle, content: "\
                        <!-- AJAX & Apache2::FileManager: create div, default input value, will be overwritten by js_editor_file_manager_div_update() -->\
                        <div id='editor_file_manager_div'></div>\
                    "},
                    { type: 'main', style: pstyle + 'padding: 0px; border-top: 0px;', content: "\
                        <style> .tab_class { width: 100%; min-height: 150px; display: none; padding: 0px; overflow: auto; } </style>\
                        <div id='tabs_parent_div'>\
                            <div id='tabs_div' style='width: 100%; height: 29px;'></div>\
                            <div id='tab1_div' class='tab_class'>FOO TAB 1</div>\
                            <div id='tab2_div' class='tab_class'>BAR TAB 2 (non-alcoholic, of course!)</div>\
                            <div id='tab3_div' class='tab_class'>BAT TAB 3</div>\
                        </div>\
                    "}
                ]
            });

            // W2UI: set initial layout & editor heights
            var shiny_header_footer_height = 200;
            var window_inner_height = window.innerHeight;
            //alert('in layout setup, have window_inner_height = ' + window_inner_height);
            window.document.getElementById('layout_div').style.height = (window_inner_height - shiny_header_footer_height) + 'px';
            var layout_top_height = w2ui['layout'].get('top').size;
            var tabs_div_height = parseInt(window.document.getElementById('tabs_div').style.height, 10);
            var editor_height = window_inner_height - (shiny_header_footer_height + layout_top_height + tabs_div_height + 2);
            //alert('have editor_height = ' + editor_height);
            window.document.getElementById('tabs_parent_div').style.height = '100%';
            //window.document.getElementById('tabs_parent_div').style.height = editor_height + 'px';
            //window.document.getElementById('tab1_div').style.height = editor_height + 'px';
            //window.document.getElementById('tab1_div').style.height = '100%';
            window.document.getElementById('tab1_div').style.height = 'calc(100% - ' + window.document.getElementById('tabs_div').style.height + ')';

            // Apache2::FileManager: set content
            window.document.getElementById('editor_file_manager_div').innerHTML = window.document.getElementById('editor_file_manager_tmp_div').innerHTML;

            // ACE Editor: create, configure

            // don't load code before editor: enable heredocs, so multi-line TT variables can be placed inside JS variables
            function heredoc (f) { return f.toString().match(/\/\*\s*([\s\S]*?)\s*\*\//m)[1]; };

            // create textarea object & hide
            var editor_ace_textarea_var = $('textarea[name="editor_ace_textarea"]');
            editor_ace_textarea_var.hide();

            // create object
            //var editor = ace.edit(window.document.getElementById('tab1_div'));  // local scope
            editor = ace.edit(window.document.getElementById('tab1_div'));  // global scope, can be accessed by keybindings radio buttons in layout top frame
            //alert('have tab1_div = ' + window.document.getElementById('tab1_div'));

            // configure settings
            ace.require('ace/ext/settings_menu').init(editor);
            editor.setTheme('ace/theme/sqlserver');
            editor.getSession().setMode('ace/mode/perl');
            editor.getSession().setTabSize(4);
            editor.getSession().setUseSoftTabs(true);
            editor.setPrintMarginColumn(160);

            // disable message: Automatically scrolling cursor into view after selection change this will be disabled in the next version
            editor.$blockScrolling = Infinity;





            // START HERE: fix content area scaling problem
            // START HERE: fix content area scaling problem
            // START HERE: fix content area scaling problem

            editor.setAutoScrollEditorIntoView(true);  // IS THIS NEEDED for scaling???







            // don't load code before editor: now load default source code input received from Code.pm, de-select-all
            var file_input_default = heredoc(function(){/*
            [%- file_input.default %]
            */});
            editor.setValue(file_input_default);
            editor.session.selection.clearSelection();

            // set ACE Editor key bindings for menu & vim commands
            /* disabled in favor of F7 via Keyboard Shortcuts
            editor.commands.addCommands([
                {
                    name: 'showSettingsMenu',
                    bindKey: {win: 'Ctrl-m', mac: 'Command-m'},
                    exec: function(editor) { editor.showSettingsMenu(); },
                    readOnly: true
                }
            ]);
            */
            editor.setKeyboardHandler('ace/keyboard/vim');







            
            // save file
            editor.commands.addCommand({
              name: 'saveFile',
              bindKey: {
                win: 'Ctrl-S', mac: 'Command-S',
                sender: 'editor|cli'
              },
              exec: function (env, args, request) {
//                alert('SAVE FILE TRIGGER: args.input = ' + args.input + ', args.commandName = ' + args.commandName + ', args.argString = ' + args.argString);
            
                var f=window.document.forms.namedItem('FileManager');
            
                if (args.argString) {
                    // SECURITY: do not allow double-dots in filename, client-side check
                    var arg_string = args.argString.substring(1);
//                    alert("HAVE arg_string = '" + arg_string + "'");
                    var non_filename_regex = /[^a-zA-Z0-9-_.\/]/g;
                    var multidot_regex = /[.][.]+/g;
                    if (non_filename_regex.test(arg_string) || multidot_regex.test(arg_string)) {
                        alert('ERROR: Unsupported character detected in file name ' + "'" + arg_string + "'" + ', please use only letters, numbers, hyphens, underscores, forward slashes, and single dots.');
                        return;
                    }
                    else {
                        f.FILEMANAGER_curr_file.value = arg_string;
//                        alert('GOOD: Supported file name, from arg_string, have f.FILEMANAGER_curr_file.value = ' + "'" + f.FILEMANAGER_curr_file.value + "'" + '.');
                    }
                }
                else {
                    if ((typeof f.FILEMANAGER_curr_file.value == 'undefined') || (f.FILEMANAGER_curr_file.value == '')) {
                        f.FILEMANAGER_curr_file.value = '[%- editor_file_manager.curr_file %]';
//                        alert('GOOD: Supported file name, default file from static TT value, set f.FILEMANAGER_curr_file.value = ' + "'" + f.FILEMANAGER_curr_file.value + "'" + '.');
                    }
//                    else {
//                        alert('GOOD: Supported file name, existing, have f.FILEMANAGER_curr_file.value = ' + "'" + f.FILEMANAGER_curr_file.value + "'" + '.');
//                    }
                }
            
                f.FILEMANAGER_cmd.value = 'save';
                editor_ace_textarea_var.val(editor.getSession().getValue());
                editor_file_manager_input_ajax( ['FILEMANAGER_curr_file', 'FILEMANAGER_curr_dir', 'FILEMANAGER_cmd', 'FILEMANAGER_arg', 'FILEMANAGER_last_select_all', 'editor_ace_textarea'], [js_editor_file_save_report] );
            
                // unset 'save' command to avoid false triggering when navigating FileManager after saving a file
                f.FILEMANAGER_cmd.value = '';

                //console.log('SAVE FILE TRIGGER: env = ', env, ', args = ', args, ', request = ', request);
              }
            });
 
            // enable vim :w and :write commands
            ace.config.loadModule('ace/keyboard/vim', function(m) {
                var VimApi = ace.require('ace/keyboard/vim').CodeMirror.Vim;
                VimApi.defineEx('write', 'w', function(cm, input) {
                    cm.ace.execCommand('saveFile', input);
                })
            });






// START HERE: fix weird \r\n ^M newline issue, open files in new tabs, save current dir to reuse for `:w foo.pl` save command w/ explicit filename, change output file owner to not be root.root, refresh filemanager after saves
// START HERE: fix weird \r\n ^M newline issue, open files in new tabs, save current dir to reuse for `:w foo.pl` save command w/ explicit filename, change output file owner to not be root.root, refresh filemanager after saves
// START HERE: fix weird \r\n ^M newline issue, open files in new tabs, save current dir to reuse for `:w foo.pl` save command w/ explicit filename, change output file owner to not be root.root, refresh filemanager after saves










            // Syntax Check: set hidden textarea value to ACE Editor value
            $('#syntax_check_submit').on('click', function() {
                editor_ace_textarea_var.val(editor.getSession().getValue());
            });

        // W2UI: create layout, done
        });

        // W2UI: create nested tabs
        var config = {
            tabs: {
                name: 'tabs_w2ui',
                active: 'tab1_div',
                tabs: [
                    //{ id: 'tab1_div', caption: 'Current File' },
                    { id: 'tab1_div', caption: '[%- editor_file_manager.curr_file %]' },
                    //{ id: 'tab2_div', caption: 'Tab 2' },
                    //{ id: 'tab3_div', caption: 'Tab 3' },
                ],
                onClick: function (event) {
                    $('#tabs_parent_div .tab_class').hide();
                    $('#tabs_parent_div #' + event.target).show();
                }
            }
        }
        $(function () {
            $('#tabs_div').w2tabs(config.tabs);
            $('#tab1_div').show();
        });

        <!-- Keyboard Shortcuts: create -->
        shortcut.add('F6',function() { window.document.forms.namedItem('syntax_check').submit(); });
        shortcut.add('F7',function() { editor.showSettingsMenu(); });
        shortcut.add('F8',function() { w2ui['layout'].toggle('left', 0); });
        shortcut.add('F9',function() { w2ui['layout'].toggle('top', 0); });
        shortcut.add('F10',function() { w2ui_layout_size_toggle(); });
    </script>

[%- END %]
